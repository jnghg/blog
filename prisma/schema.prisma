generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// OAuth
model Account {
  id                       String  @id @default(cuid())
  userId                   String  @map("user_id")
  type                     String
  provider                 String
  providerAccountId        String  @map("provider_account_id")
  refresh_token            String?
  refresh_token_expires_in Int?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// email login token
model VerificationToken {
  identifier String   @id @default(cuid()) @map("_id")
  token      String
  expires    DateTime

  @@unique([identifier, token])
}

// 사용자
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?
  emailVerified DateTime? @map("email_verified")
  image         String?
  posts         Post[]
  sessions      Session[]
  accounts      Account[]

  @@unique([email])
}

model Post {
  id         String       @id @default(cuid())
  title      String
  content    String
  userId     String
  user       User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  postImages PostImages[]
  createAt   DateTime     @default(now())
  updateAt   DateTime     @updatedAt
}

model PostImages {
  id     String  @id @default(cuid())
  name   String
  path   String
  size   Int?
  format String?

  postId String
  Post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
}
